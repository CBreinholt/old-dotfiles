#!/bin/sh

# Exit upon any errors, invalid files, or unidentified vars
set -efu
_state=0
_dir="${XDG_CACHE_HOME:-$HOME/.cache}"

# Get the parameters to the function
while test $# -gt 0; do
	case "$1" in
        -d)
            shift
            if test $# -gt 0; then
                _dir=$1
            else
                echo -e "No dir specified"
                exit 1
            fi
            shift
            ;;
        --directory*)
            _dir=$(echo -e $1 | sed -e 's/^[^=]*=//g')
            shift
            ;;
        --stop*)
            _state=1
            if [ "$(echo -e $1 | sed -e 's/^[^=]*=//g')" == "now" ]; then
                _state=2
            fi
            shift
            ;;
        *)
            break
            ;;
    esac
done

# Move the cache to tmpfs, keep there until _stop is called
function _sync() {
    echo -e " :: syncing cache data..."
    if [ ! -r $_cache ]; then
        mkdir -p -m 0700 $_cache
        echo -e "\t==> created $_cache"
    fi
    if [ "$(readlink $_dir)" != "$_cache" ]; then
        mv $_dir $_copy
        ln -s $_cache $_dir
        echo -e "\t==> created backup at $_copy"
    fi
    if [ -e $_dir/.unpacked ]; then
        rsync -a --delete --exclude .unpacked $_dir/ $_copy/
        echo -e "\t==> wrote $_cache to $_copy"
    else
        rsync -a $_copy/ $_dir/
        touch $_dir/.unpacked
        echo -e "\t==> wrote $_copy to $_cache"
    fi
}

# Return the cache to disk and delete from tmpfs
function _stop {
    echo -e " :: moving cache back to disk..."
    if [ "$(readlink $_dir)" == "$_cache" ]; then
        rm -rf $_dir
        echo -e "\t==> removed link to $_cache"
        mv $_copy $_dir
        echo -e "\t==> restored cache to original state"
        rm -rf $_cache
        echo -e "\t==> restored tmpfs to original state"
    else
        echo -e "* dir not stored at $_cache"
    fi
}

# Run program
_link="$(echo -e "$_dir" | grep -Eo '[^/]+/?$' | sed 's/\///g')"
_cache="/dev/shm/$USER/$_link"
_copy="$_dir.backup"
case "$_state" in
    0) _sync ;;
    1) _sync; _stop ;;
    2) _stop ;;
    *) break ;;
esac
